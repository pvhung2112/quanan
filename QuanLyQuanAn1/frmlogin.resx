<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KnqgbNUT1Iciv//Z
</value>
  </data>
</root>